<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.bgcms.dao.BoardGameMapper">
  <resultMap id="BaseResultMap" type="edu.bgcms.model.boardGame.BoardGame">
    <id column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="information" jdbcType="VARCHAR" property="information" />
    <result column="maxPlayers" jdbcType="INTEGER" property="maxplayers" />
    <result column="buytime" jdbcType="VARCHAR" property="buytime" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <result column="applicant" jdbcType="VARCHAR" property="applicant" />
    <result column="applicantiontime" jdbcType="TIMESTAMP" property="applicantiontime" />
    <result column="currentUser" jdbcType="VARCHAR" property="currentuser" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="views" jdbcType="INTEGER" property="views" />
    <result column="lends" jdbcType="INTEGER" property="lends" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uuid, name, type, information, maxPlayers, buytime, money, applicant, applicantiontime, 
    currentUser, status, views, lends
  </sql>
  <select id="selectByExample" parameterType="edu.bgcms.model.boardGame.BoardGameExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from boardgame
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from boardgame
    where uuid = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from boardgame
    where uuid = #{uuid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="edu.bgcms.model.boardGame.BoardGameExample">
    delete from boardgame
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.bgcms.model.boardGame.BoardGame">
    insert into boardgame (uuid, name, type, 
      information, maxPlayers, buytime, 
      money, applicant, applicantiontime, 
      currentUser, status, views, 
      lends)
    values (#{uuid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{information,jdbcType=VARCHAR}, #{maxplayers,jdbcType=INTEGER}, #{buytime,jdbcType=VARCHAR}, 
      #{money,jdbcType=DOUBLE}, #{applicant,jdbcType=VARCHAR}, #{applicantiontime,jdbcType=TIMESTAMP}, 
      #{currentuser,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{views,jdbcType=INTEGER}, 
      #{lends,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="edu.bgcms.model.boardGame.BoardGame">
    insert into boardgame
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="information != null">
        information,
      </if>
      <if test="maxplayers != null">
        maxPlayers,
      </if>
      <if test="buytime != null">
        buytime,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="applicant != null">
        applicant,
      </if>
      <if test="applicantiontime != null">
        applicantiontime,
      </if>
      <if test="currentuser != null">
        currentUser,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="views != null">
        views,
      </if>
      <if test="lends != null">
        lends,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="information != null">
        #{information,jdbcType=VARCHAR},
      </if>
      <if test="maxplayers != null">
        #{maxplayers,jdbcType=INTEGER},
      </if>
      <if test="buytime != null">
        #{buytime,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="applicant != null">
        #{applicant,jdbcType=VARCHAR},
      </if>
      <if test="applicantiontime != null">
        #{applicantiontime,jdbcType=TIMESTAMP},
      </if>
      <if test="currentuser != null">
        #{currentuser,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="views != null">
        #{views,jdbcType=INTEGER},
      </if>
      <if test="lends != null">
        #{lends,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.bgcms.model.boardGame.BoardGameExample" resultType="java.lang.Long">
    select count(*) from boardgame
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update boardgame
    <set>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.information != null">
        information = #{record.information,jdbcType=VARCHAR},
      </if>
      <if test="record.maxplayers != null">
        maxPlayers = #{record.maxplayers,jdbcType=INTEGER},
      </if>
      <if test="record.buytime != null">
        buytime = #{record.buytime,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DOUBLE},
      </if>
      <if test="record.applicant != null">
        applicant = #{record.applicant,jdbcType=VARCHAR},
      </if>
      <if test="record.applicantiontime != null">
        applicantiontime = #{record.applicantiontime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.currentuser != null">
        currentUser = #{record.currentuser,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.views != null">
        views = #{record.views,jdbcType=INTEGER},
      </if>
      <if test="record.lends != null">
        lends = #{record.lends,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update boardgame
    set uuid = #{record.uuid,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      information = #{record.information,jdbcType=VARCHAR},
      maxPlayers = #{record.maxplayers,jdbcType=INTEGER},
      buytime = #{record.buytime,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=DOUBLE},
      applicant = #{record.applicant,jdbcType=VARCHAR},
      applicantiontime = #{record.applicantiontime,jdbcType=TIMESTAMP},
      currentUser = #{record.currentuser,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      views = #{record.views,jdbcType=INTEGER},
      lends = #{record.lends,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.bgcms.model.boardGame.BoardGame">
    update boardgame
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="information != null">
        information = #{information,jdbcType=VARCHAR},
      </if>
      <if test="maxplayers != null">
        maxPlayers = #{maxplayers,jdbcType=INTEGER},
      </if>
      <if test="buytime != null">
        buytime = #{buytime,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="applicant != null">
        applicant = #{applicant,jdbcType=VARCHAR},
      </if>
      <if test="applicantiontime != null">
        applicantiontime = #{applicantiontime,jdbcType=TIMESTAMP},
      </if>
      <if test="currentuser != null">
        currentUser = #{currentuser,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="views != null">
        views = #{views,jdbcType=INTEGER},
      </if>
      <if test="lends != null">
        lends = #{lends,jdbcType=INTEGER},
      </if>
    </set>
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.bgcms.model.boardGame.BoardGame">
    update boardgame
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      information = #{information,jdbcType=VARCHAR},
      maxPlayers = #{maxplayers,jdbcType=INTEGER},
      buytime = #{buytime,jdbcType=VARCHAR},
      money = #{money,jdbcType=DOUBLE},
      applicant = #{applicant,jdbcType=VARCHAR},
      applicantiontime = #{applicantiontime,jdbcType=TIMESTAMP},
      currentUser = #{currentuser,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      views = #{views,jdbcType=INTEGER},
      lends = #{lends,jdbcType=INTEGER}
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
</mapper>